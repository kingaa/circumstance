_N_e_w_s _f_o_r _p_a_c_k_a_g_e '_c_i_r_c_u_m_s_t_a_n_c_e'

_C_h_a_n_g_e_s _i_n '_c_i_r_c_u_m_s_t_a_n_c_e' _v_e_r_s_i_o_n _0._0._1_0:

        • Changes to make it easier to pass ‘doFuture’ options.

_C_h_a_n_g_e_s _i_n '_c_i_r_c_u_m_s_t_a_n_c_e' _v_e_r_s_i_o_n _0._0._9:

        • We use ‘doFuture::%dofuture%’ in preference to
          ‘foreach::%dopar%’.

_C_h_a_n_g_e_s _i_n '_c_i_r_c_u_m_s_t_a_n_c_e' _v_e_r_s_i_o_n _0._0._8:

        • New parallel ‘pmcmc’ methods for parallel particle Markov
          chain Monte Carlo.

_C_h_a_n_g_e_s _i_n '_c_i_r_c_u_m_s_t_a_n_c_e' _v_e_r_s_i_o_n _0._0._7:

        • Information on parallel backend is now stored as an attribute
          of returned objects.

_C_h_a_n_g_e_s _i_n '_c_i_r_c_u_m_s_t_a_n_c_e' _v_e_r_s_i_o_n _0._0._5:

        • New ‘mif2’ method for parallel iterated filtering.

        • New ‘continue’ method for continuing ‘mif2’ computations.

_C_h_a_n_g_e_s _i_n '_c_i_r_c_u_m_s_t_a_n_c_e' _v_e_r_s_i_o_n _0._0._4:

        • Use with ‘doFuture’ is envisioned.

        • Streamline some of the definitions.

        • Improve coverage.

_C_h_a_n_g_e_s _i_n '_c_i_r_c_u_m_s_t_a_n_c_e' _v_e_r_s_i_o_n _0._0._3:

        • Updates for new version of ‘pomp’.

_C_h_a_n_g_e_s _i_n '_c_i_r_c_u_m_s_t_a_n_c_e' _v_e_r_s_i_o_n _0._0._1:

        • Improved the parallel ‘pfilter’ facility.

_C_h_a_n_g_e_s _i_n '_c_i_r_c_u_m_s_t_a_n_c_e' _v_e_r_s_i_o_n _0._0._0:

        • A parallel ‘pfilter’ is provided.

