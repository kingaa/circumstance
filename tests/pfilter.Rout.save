
R version 4.2.2 (2022-10-31) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> options(digits=3)
> png(filename="pfilter-%02d.png",res=100)
> 
> set.seed(789744859)
> 
> library(circumstance)
Loading required package: foreach
Loading required package: pomp

Welcome to pomp!

As of version 4.6, no user-visible pomp function has a name that
includes a dot ('.'). Function names have been changed to replace the
dot with an underscore ('_'). For more information, see the pomp blog:
https://kingaa.github.io/pomp/blog.html.


Attaching package: ‘circumstance’

The following object is masked from ‘package:pomp’:

    pfilter

> library(tidyr)
> library(ggplot2)
> library(doParallel)
Loading required package: iterators
Loading required package: parallel
> library(doRNG)
Loading required package: rngtools
> 
> chk <- Sys.getenv("_R_CHECK_LIMIT_CORES_", "")
> 
> if (nzchar(chk) && chk == "TRUE") {
+   ## use 2 cores in CRAN/Travis/AppVeyor
+   ncores <- 2L
+ } else {
+   ## use all cores in devtools::test()
+   ncores <- parallel::detectCores()
+ }
> 
> registerDoParallel(ncores)
> registerDoRNG(789744859)
> 
> ou2() -> ou2
> ou2 |>
+   pfilter(Np=1000,Nrep=6) -> pfs
> 
> pfs |>
+   logLik() |>
+   logmeanexp(se=TRUE)
     est       se 
-476.734    0.316 
> 
> pfs |>
+   as.data.frame() |>
+   head()
  .id time    y1    y2     x1    x2   ess cond.logLik
1   1    1 -4.05 4.781 -3.718  4.25 160.6       -4.31
2   1    2  1.83 6.273  0.940  6.84 148.1       -4.42
3   1    3 -1.32 7.556 -0.373  7.59  71.4       -5.20
4   1    4  6.64 5.730  5.809  6.49  76.1       -5.01
5   1    5  6.58 1.561  5.605  1.84 217.1       -3.99
6   1    6  7.54 0.176  7.355 -1.57 135.8       -4.51
> 
> ou2 |>
+   pfilter(Np=1000) |>
+   logLik()
[1] -477
> 
> pfs |>
+   lapply(simulate) |>
+   setNames(LETTERS[1:6]) |>
+   {
+     \(x) do.call(c,x)
+   }() |>
+   pfilter(Nrep=2,Np=200) -> pfs2
> 
> pfs2 |>
+   data.frame() |>
+   separate(.id,c("po","rep")) |>
+   ggplot(aes(x=time,y=ess,group=rep,color=rep))+
+   geom_line()+
+   facet_wrap(~po)
> 
> registerDoSEQ()
> 
> dev.off()
null device 
          1 
> 
