
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> options(digits=3)
> png(filename="pmcmc-%02d.png",res=100)
> 
> set.seed(432621217)
> 
> library(circumstance)
Loading required package: pomp

Welcome to pomp!

As of version 4.6, no user-visible pomp function has a name that
includes a dot ('.'). Function names have been changed to replace the
dot with an underscore ('_'). For more information, see the pomp blog:
https://kingaa.github.io/pomp/blog.html.


Attaching package: ‘circumstance’

The following objects are masked from ‘package:pomp’:

    mif2, pfilter, pmcmc

> library(tidyr)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(ggplot2)
> library(doFuture)
Loading required package: foreach
Loading required package: future
> 
> plan(sequential)
> 
> ou2() -> ou2
> 
> coef(ou2) |> parmat(3) |> t() |> as.data.frame() -> starts
> starts$alpha_3 <- c(-0.1,0.1,0.3)
> starts$alpha_1 <- 0.6
> 
> ou2 |>
+   window(end=10) |>
+   pmcmc(
+     starts=starts,
+     Np=500,Nmcmc=100,
+     proposal=mvn_diag_rw(rw.sd=c(alpha_1=0.001,alpha_3=0.001))
+   ) -> pms
> 
> pms |>
+   traces(pars=c("alpha_1","alpha_3","loglik")) |>
+   plot()
> 
> pms |>
+   as.data.frame() |>
+   head()
  .L1 time    y1    y2    ess cond.logLik
1   1    1 -4.05 4.781 103.53       -4.10
2   1    2  1.83 6.273  59.08       -4.51
3   1    3 -1.32 7.556  77.41       -4.36
4   1    4  6.64 5.730   6.58       -7.45
5   1    5  6.58 1.561  60.66       -4.59
6   1    6  7.54 0.176  36.48       -5.24
> 
> pms |> logLik()
    1     2     3 
-47.2 -45.1 -44.3 
> 
> pms[[1]] |> pmcmc()
<object of class ‘pmcmcd_pomp’>
> 
> pms |>
+   continue(Nmcmc=10) |>
+   traces(pars=c("alpha_1","alpha_3","loglik")) |>
+   plot()
> 
> pms |>
+   pmcmc(Nmcmc=10) |>
+   as.data.frame() |>
+   head()
  .L1 time    y1    y2    ess cond.logLik
1   1    1 -4.05 4.781 125.32       -3.84
2   1    2  1.83 6.273  44.80       -4.96
3   1    3 -1.32 7.556  71.87       -4.42
4   1    4  6.64 5.730   9.94       -6.19
5   1    5  6.58 1.561  70.11       -4.42
6   1    6  7.54 0.176  38.61       -5.21
> 
> pms |>
+   lapply(as_pomp) |>
+   concat() |>
+   pmcmc(
+     Np=500,Nmcmc=20,
+     proposal=mvn_diag_rw(rw.sd=c(alpha_1=0.001,alpha_3=0.001))
+   ) |>
+   traces(pars=c("alpha_1","alpha_3","loglik")) |>
+   plot()
> 
> pms |>
+   lapply(as,"pfilterd_pomp") |>
+   concat() |>
+   pmcmc(
+     Nmcmc=100,
+     proposal=mvn_diag_rw(rw.sd=c(alpha_1=0.001))
+   ) |>
+   traces(pars=c("alpha_1","loglik")) |>
+   plot()
> 
> dev.off()
null device 
          1 
> 
